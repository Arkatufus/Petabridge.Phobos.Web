
services:
  grafana:
    image: grafana/grafana:latest
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      GF_AUTH_BASIC_ENABLED: true
      GF_AUTH_ANONYMOUS_ENABLED: false
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: grafana
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "100M"
        reservations:
          cpus: "0.1"
          memory: "100M"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/login"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    volumes:
      - grafana_storage_volume:/var/lib/grafana
      - ./configs/grafana/provisioning:/etc/grafana/provisioning
      - ./configs/grafana/dashs:/var/lib/grafana/dashboards

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      # Agent ports
      - "5775:5775" # zipkin-thrift
      - "6831:6831" # thrift-compact
      - "6832:6832" # thrift-binary
      - "5778:5778" # configs
      # Jaeger Frontend
      - "16686:16686"
      # Collector ports
      - "9411:9411" # zipkin
      - "14267:14267" # jaeger-tchannel
      - "14268:14268" # jaeger-thrift
      - "14250:14250" # model-proto
      - "4317:4317" # oltp-grpc
      - "4318:4318" # oltp-http
      # Collector metrics port
      - "14269:14269"
    restart: unless-stopped
    environment:
      COLLECTOR_ZIPKIN_HTTP_PORT: 9411
      COLLECTOR_OTLP_ENABLED: true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://jaeger:14269"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  prometheus:
    image: prom/prometheus:latest
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus/"
    ports:
      - 9090:9090
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "1G"
        reservations:
          cpus: "0.512"
          memory: "500M"
    volumes:
      - prometheus_storage_volume:/prometheus
      - ./configs/prometheus:/etc/prometheus

  seq:
    image: datalust/seq:latest
    ports:
      - "8988:80"
    restart: unless-stopped
    environment:
      ACCEPT_EULA: Y

  traefik:
    image: traefik:latest
    container_name: "traefik"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
    ports:
      - "80:80"  # Traefik HTTP
      - "8080:8080"  # Traefik Dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
  
  phobos_web_0:
    image: petabridge.phobos.web:0.1.1
    labels:
      - traefik.enable=true
      - traefik.http.routers.phobos_web_0.rule=Host(`localhost`)
      - traefik.http.routers.phobos_web_0.rule=PathPrefix(`/`)
      - traefik.http.routers.phobos_web_0.entrypoints=web
      - traefik.http.services.phobos_web_0.loadbalancer.server.port=8080
    environment:
      POD_NAME: phobos_web_0
      CLUSTER_SEEDS: akka.tcp://ClusterSys@phobos_web_0:4055,akka.tcp://ClusterSys@phobos_web_1:4055,akka.tcp://ClusterSys@phobos_web_2:4055
      CLUSTER_IP: phobos_web_0
      CLUSTER_PORT: 4055
      ASPNETCORE_ENVIRONMENT: Development
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://jaeger:4317"
      OTEL_EXPORTER_OTLP_PROTOCOL: grpc
      JAEGER_SAMPLER_PARAM: 1
      SEQ_SERVICE_HOST: seq
      SEQ_SERVICE_PORT: 80
    restart: unless-stopped

  phobos_web_1:
    image: petabridge.phobos.web:0.1.1
    labels:
      - traefik.enable=true
      - traefik.http.routers.phobos_web_1.rule=Host(`localhost`)
      - traefik.http.routers.phobos_web_1.rule=PathPrefix(`/`)
      - traefik.http.routers.phobos_web_1.entrypoints=web
      - traefik.http.services.phobos_web_1.loadbalancer.server.port=8080
    environment:
      POD_NAME: phobos_web_1
      CLUSTER_SEEDS: akka.tcp://ClusterSys@phobos_web_0:4055,akka.tcp://ClusterSys@phobos_web_1:4055,akka.tcp://ClusterSys@phobos_web_2:4055
      CLUSTER_IP: phobos_web_1
      CLUSTER_PORT: 4055
      ASPNETCORE_ENVIRONMENT: Development
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://jaeger:4317"
      OTEL_EXPORTER_OTLP_PROTOCOL: grpc
      JAEGER_SAMPLER_PARAM: 1
      SEQ_SERVICE_HOST: seq
      SEQ_SERVICE_PORT: 80
    restart: unless-stopped

  phobos_web_2:
    image: petabridge.phobos.web:0.1.1
    labels:
      - traefik.enable=true
      - traefik.http.routers.phobos_web_2.rule=Host(`localhost`)
      - traefik.http.routers.phobos_web_2.rule=PathPrefix(`/`)
      - traefik.http.routers.phobos_web_2.entrypoints=web
      - traefik.http.services.phobos_web_2.loadbalancer.server.port=8080
    environment:
      POD_NAME: phobos_web_2
      CLUSTER_SEEDS: akka.tcp://ClusterSys@phobos_web_0:4055,akka.tcp://ClusterSys@phobos_web_1:4055,akka.tcp://ClusterSys@phobos_web_2:4055
      CLUSTER_IP: phobos_web_2
      CLUSTER_PORT: 4055
      ASPNETCORE_ENVIRONMENT: Development
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://jaeger:4317"
      OTEL_EXPORTER_OTLP_PROTOCOL: grpc
      JAEGER_SAMPLER_PARAM: 1
      SEQ_SERVICE_HOST: seq
      SEQ_SERVICE_PORT: 80
    restart: unless-stopped

volumes:
  grafana_storage_volume: {}
  prometheus_storage_volume: {}
